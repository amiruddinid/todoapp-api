{
	"info": {
		"_postman_id": "24713eae-778a-4d19-8524-2da66f5c2671",
		"name": "Todos",
		"description": "Collection for testing the Conduit API\n\nhttps://github.com/gothinkster/realworld",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b34d5e8d-56f2-4982-9632-1603e12bffcd",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"var data = responseJSON.data || {};",
									"",
									"tests['User has \"email\" property'] = data.hasOwnProperty('email');",
									"tests['User has \"username\" property'] = data.hasOwnProperty('username');",
									"tests['User has \"token\" property'] = data.hasOwnProperty('token');",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"john@jacob.com\", \n\t\"password\":\"johnnyjacob\", \n\t\"username\":\"johnjacob\", \n\t\"fullname\":\"John Jacob\", \n\t\"bio\":\"left for dead\"\n}"
						},
						"url": {
							"raw": "{{apiUrl}}/users",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64325ca6-ac75-4e3c-99b9-9334a02af9c0",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"var data = responseJSON.data || {};",
									"",
									"tests['User has \"email\" property'] = data.hasOwnProperty('email');",
									"tests['User has \"username\" property'] = data.hasOwnProperty('username');",
									"tests['User has \"token\" property'] = data.hasOwnProperty('token');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/users/login",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login and Remember Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a6854ba-0f77-4542-bc0b-da18c85312a8",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"var data = responseJSON.data || {};",
									"",
									"tests['User has \"email\" property'] = data.hasOwnProperty('email');",
									"tests['User has \"username\" property'] = data.hasOwnProperty('username');",
									"tests['User has \"token\" property'] = data.hasOwnProperty('token');",
									"",
									"if(tests['User has \"token\" property']){",
									"    postman.setEnvironmentVariable('token', data.token);",
									"}",
									"",
									"tests['Environment variable \"token\" has been set'] = environment.token === data.token;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"john@jacob.com\", \"password\":\"johnnyjacob\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/users/login",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a0c02bd7-b789-4834-b0b4-7a154f8b5c51",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"var data = responseJSON.data || {};",
									"",
									"tests['User has \"email\" property'] = data.hasOwnProperty('email');",
									"tests['User has \"username\" property'] = data.hasOwnProperty('username');",
									"tests['User has \"token\" property'] = data.hasOwnProperty('token');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b136eb2e-fc60-40ba-a26d-e89fd467ef0c",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"var data = responseJSON.data || {};",
									"",
									"tests['data has \"email\" property'] = data.hasOwnProperty('email');",
									"tests['data has \"username\" property'] = data.hasOwnProperty('username');",
									"tests['atahas \"token\" property'] = data.hasOwnProperty('token');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"john@jacob.com\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Todo with authentication",
			"item": [
				{
					"name": "Create Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a65a4f3d-2508-45de-935d-92aac9990b0e",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"var todo = responseJSON.data || {};",
									"",
									"tests['Todo has \"title\" property'] = todo.hasOwnProperty('title');",
									"tests['Todo has \"desc\" property'] = todo.hasOwnProperty('desc');",
									"tests['Todo has \"date\" property'] = todo.hasOwnProperty('date');",
									"tests['Todo has \"id\" property'] = todo.hasOwnProperty('id');",
									"if(tests['Todo has \"id\" property']){",
									"    postman.setEnvironmentVariable('id', todo.id);",
									"}",
									"tests['Todo has \"createdAt\" property'] = todo.hasOwnProperty('createdAt');",
									"tests['Todo\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(todo.createdAt).toISOString() === todo.createdAt;",
									"tests['Todo has \"updatedAt\" property'] = todo.hasOwnProperty('updatedAt');",
									"tests['Todo\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(todo.updatedAt).toISOString() === todo.updatedAt;",
									"tests['Todo has \"author\" property'] = todo.hasOwnProperty('author');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\":\"How to train your dragon\", \"desc\":\"Ever wonder how?\", \"date\":\"2019-02-12\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/todo",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"todo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single Todo by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "536705fb-b068-43ca-aded-d889fba26690",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"    if(responseJSON.data.length){",
									"        var data = responseJSON.data[0];",
									"",
									"        tests['data has \"title\" property'] = data.hasOwnProperty('title');",
									"        tests['data has \"desc\" property'] = data.hasOwnProperty('desc');",
									"        tests['data has \"date\" property'] = data.hasOwnProperty('date');",
									"        tests['data has \"createdAt\" property'] = data.hasOwnProperty('createdAt');",
									"        tests['data\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(data.createdAt).toISOString() === data.createdAt;",
									"        tests['data has \"updatedAt\" property'] = data.hasOwnProperty('updatedAt');",
									"        tests['data\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(data.updatedAt).toISOString() === data.updatedAt;",
									"        tests['data has \"author\" property'] = data.hasOwnProperty('author');",
									"    }",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/todo/{{id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All Todo by Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "536705fb-b068-43ca-aded-d889fba26690",
								"exec": [
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"",
									"    tests['Response contains \"data\" property'] = responseJSON.hasOwnProperty('data');",
									"",
									"    if(responseJSON.data.length){",
									"        var data = responseJSON.data[0];",
									"",
									"        tests['data has \"title\" property'] = data.hasOwnProperty('title');",
									"        tests['data has \"desc\" property'] = data.hasOwnProperty('desc');",
									"        tests['data has \"date\" property'] = data.hasOwnProperty('date');",
									"        tests['data has \"createdAt\" property'] = data.hasOwnProperty('createdAt');",
									"        tests['data\\'s \"createdAt\" property is an ISO 8601 timestamp'] = new Date(data.createdAt).toISOString() === data.createdAt;",
									"        tests['data has \"updatedAt\" property'] = data.hasOwnProperty('updatedAt');",
									"        tests['data\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = new Date(data.updatedAt).toISOString() === data.updatedAt;",
									"        tests['data has \"author\" property'] = data.hasOwnProperty('author');",
									"    }",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/todo/",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"todo",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b35f4c4-540f-49ab-831d-155c111683bb",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('success');",
									"tests['Response contains \"success\" property'] = responseJSON.hasOwnProperty('success');",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"title\":\"With two hands\"}"
						},
						"url": {
							"raw": "{{apiUrl}}/todo/{{id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Done todo by Endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0d14ac9-d994-410d-82a3-d9754a983fc9",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"",
									"tests['Response contains \"success\" property'] = responseJSON.hasOwnProperty('success');",
									"tests['Response contains \"message\" property'] = responseJSON.hasOwnProperty('message');",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"article\":{\"body\":\"With two hands\"}}"
						},
						"url": {
							"raw": "{{apiUrl}}/todo/done/{{id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"todo",
								"done",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14548103-edb5-4381-91e0-39b688c6a33f",
								"exec": [
									"var is204Response = responseCode.code === 204;",
									"",
									"tests['Response code is 204 No Content'] = is204Response;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiUrl}}/todo/{{id}}",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"todo",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}